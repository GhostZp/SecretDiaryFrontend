(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const e of document.querySelectorAll('link[rel="modulepreload"]'))c(e);new MutationObserver(e=>{for(const o of e)if(o.type==="childList")for(const a of o.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&c(a)}).observe(document,{childList:!0,subtree:!0});function s(e){const o={};return e.integrity&&(o.integrity=e.integrity),e.referrerPolicy&&(o.referrerPolicy=e.referrerPolicy),e.crossOrigin==="use-credentials"?o.credentials="include":e.crossOrigin==="anonymous"?o.credentials="omit":o.credentials="same-origin",o}function c(e){if(e.ep)return;e.ep=!0;const o=s(e);fetch(e.href,o)}})();const g=async(n,t={})=>{try{const s=await fetch(n,t),c=s.headers.get("Content-Type");if(c&&c.includes("application/json"))return await s.json();{const e=await s.text();return console.error("Unexpected response format:",e),{error:"Unexpected error occurred."}}}catch(s){return console.error("fetchData() error:",s.message),{error:s.message}}},i=document.getElementById("snackbar"),l=(n,t="")=>{i.innerText=n,i.className=`show ${t}`.trim(),setTimeout(()=>{i.className=i.className.replace("show","").trim()},1e4)},f=async n=>{n.preventDefault();const t=document.querySelector("#username").value.trim(),s=document.querySelector("#password").value.trim(),c=document.querySelector("#email").value.trim(),e={username:t,password:s,email:c},o="http://localhost:3000/api/users",a={body:JSON.stringify(e),method:"POST",headers:{"Content-type":"application/json"}};console.log(a);const r=await g(o,a);r.error?(console.log(r.error),l("Error: Remember to fill all fields and make sure password at least 8 letters long!","error")):r.message&&(console.log(r.message),l("Successfully added user! Move onto login.","success")),console.log(r),document.querySelector(".registerForm").reset()},p=async n=>{n.preventDefault();const t=document.querySelector(".loginForm"),s=t.querySelector("input[name=username]").value,c=t.querySelector("input[name=password]").value,e={username:s,password:c},o="http://localhost:3000/api/auth/login",a={body:JSON.stringify(e),method:"POST",headers:{"Content-type":"application/json"}};console.log(a);try{const r=await g(o,a);if(!r||r.error){console.error("Error logging in:",(r==null?void 0:r.error)||"Unknown error"),l("Login failed! Please check your credentials.","error");return}if(!r.token){console.error("No valid token received, login failed."),l("Login failed! Check your credentials.","error");return}console.log(r.message,"success"),localStorage.setItem("token",r.token),localStorage.setItem("username",s),l("Login successful! Redirecting...","success"),setTimeout(()=>{window.location.href="/src/pages/frontpage.html"},2e3),t.reset()}catch(r){console.error("Login request failed:",r),l("An error occurred. Please try again.","error")}},y=()=>{try{localStorage.getItem("token")?(localStorage.removeItem("token"),l("Logout successful! Redirecting...","success"),setTimeout(()=>{window.location.href="/src/pages/loginpage.html"},2e3)):console.log("error")}catch(n){console.error("Error during logout:",n),l("An error occurred while logging out.","error")}},u=document.querySelector(".registerForm");u&&u.addEventListener("submit",f);const d=document.querySelector(".loginForm");d&&d.addEventListener("submit",p);const m=document.querySelector(".logoutBtn");m&&m.addEventListener("click",y);export{g as f};
